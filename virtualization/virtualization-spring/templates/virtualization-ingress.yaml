apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hyperdata-virtualization-ingress
  annotations:
    # kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: "{{ .Values.proxy.bodysize }}"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "{{ .Values.proxy.timeout }}"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "{{ .Values.proxy.timeout }}"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "{{ .Values.proxy.timeout }}"
    nginx.ingress.kubernetes.io/auth-url: "http://hyperdata-system-svc.{{ .Release.Namespace }}.svc.cluster.local:8100/hyperdata/api/v1/gateway/auth"
    nginx.ingress.kubernetes.io/auth-response-headers: hdProjectName, hdUserRole, hdAdminRole, hdDBARole, hdManagementPermission, hdUsableDataPermission
spec:
  ingressClassName: {{ .Values.ingressClassName }}
  tls:
    - secretName: istio.hyperdata-nginx-ingress-nginx
  rules:
    - http:
        paths:
          - path: /hyperdata{{ .Values.version.major  }}/projects/(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: hyperdata-virtualization-svc
                port:
                  number: 8500
    - http:
        paths:
          - path: /hyperdata{{ .Values.version.major  }}/dataobjects/(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: hyperdata-virtualization-svc
                port:
                  number: 8500
    - http:    
        paths:
          - path: /hyperdata{{ .Values.version.major  }}/common/(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: hyperdata-virtualization-svc
                port:
                  number: 8500
