apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hyperdata-visualanalytics-ingress
  annotations:
    # kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: "{{ .Values.proxy.bodysize }}"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "{{ .Values.proxy.timeout }}"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "{{ .Values.proxy.timeout }}"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "{{ .Values.proxy.timeout }}"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS, DELETE"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header Access-Control-Allow-Methods "POST, GET, OPTIONS, DELETE, PUT";
      add_header Access-Control-Allow-Credentials true;
    # 1팀 인증 관련 설정
    nginx.ingress.kubernetes.io/auth-url: "http://hyperdata-system-svc.{{ .Release.Namespace }}.svc.cluster.local:8100/hyperdata/api/v1/gateway/auth"
    nginx.ingress.kubernetes.io/auth-response-headers: hdVisualizationPermission, hdAdminRole, hdProjectName
spec:
  ingressClassName: {{ .Values.ingressClassName }}
  tls:
    - secretName: istio.hyperdata-nginx-ingress-nginx
  rules:
    - http:
        paths:
          - path: {{ .Values.server.servlet.contextPath }}/visual-analytics/(.*)
            pathType: Prefix
            backend:
              service:
                name: hyperdata-visualanalytics-service
                port:
                  number: 8300
          - path: {{ .Values.server.servlet.contextPath }}/kca/(.*)
            pathType: Prefix
            backend:
              service:
                name: hyperdata-visualanalytics-service
                port:
                  number: 8300
